@page "/survey"
@using DeGierigeHollander.Gui.Shared
@using System.Text.Json;
@inject HttpClient Http

<PageTitle>Survey</PageTitle>

@using DeGierigeHollander.Gui.Shared

<h3>Let's go!</h3>

@foreach (var question in Questions)
{
    @*<EditForm Model="@question" OnValidSubmit="() => OnValidSubmit(question)">
        <p>@question.GetQuestion()</p>
        <InputNumber Value="@GetValue(question)" ValueChanged="@((int value) => ValueChanged(question, value))" ValueExpression="@(() => ((Question<int>)question).UserResponse)" />
        <input type="submit" value="Add" />
        @if (!string.IsNullOrEmpty(responseText))
        {
            <p>@responseText</p>
        }
    </EditForm>*@
}

@code {
    private IEnumerable<Question> Questions = Enumerable.Empty<Question>();

    private string? responseText;

    protected override async Task  OnInitializedAsync()
    {
        Questions = await GetQuestionsAsync();
    }

    private async Task<IEnumerable<Question>> GetQuestionsAsync()
    {
        var questions = await Http.GetFromJsonAsync<IEnumerable<Question>>("/api/questions");
        Console.WriteLine(JsonSerializer.Serialize(questions));

        return questions;
    }

    private void OnValidSubmit(Question question)
    {
        //responseText = question.GetResponseText();
    }

    private int GetValue(Question question)
    {

        return 0;
        //return ((Question<int>)question).UserResponse;
    }

    private void ValueChanged(Question question, int value)
    {
        //((Question<int>)question).UserResponse = value;
    }
}