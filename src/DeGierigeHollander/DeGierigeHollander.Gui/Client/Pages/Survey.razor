@page "/survey"
@using DeGierigeHollander.Gui.Shared
@using System.Text.Json;
@inject HttpClient Http

<PageTitle>Survey</PageTitle>

@using DeGierigeHollander.Gui.Shared

<h3>Let's go!</h3>
@if (Questions.Any() && Questions.ToArray()[visibleQuestionIndex] is not null)
{
     @switch(GetTypeOf())
    {
        case TypeCode.Int32:
         <QuestionItem TItem=Int32 OnNextQuestion="OnNextQuestion" Question=Questions.ToArray()[visibleQuestionIndex]></QuestionItem>
            break;
        case TypeCode.Boolean:
         <QuestionItem TItem=Boolean OnNextQuestion="OnNextQuestion" Question=Questions.ToArray()[visibleQuestionIndex]></QuestionItem>
            break;
    }

}
@code {
    private IEnumerable<Question> Questions = Enumerable.Empty<Question>();

    private int visibleQuestionIndex = 0;

    protected override async Task OnInitializedAsync()
    {
        Questions = await GetQuestionsAsync();
    }

    private async Task<IEnumerable<Question>> GetQuestionsAsync()
    {
        var questions = await Http.GetFromJsonAsync<IEnumerable<Question>>("/question");
        Console.WriteLine(JsonSerializer.Serialize(questions));

        return questions;
    }
    private void OnNextQuestion()
    {
        if (Questions.Count() -1 > visibleQuestionIndex)
            visibleQuestionIndex++;
        else
            Console.WriteLine("You're done");
    }
    private TypeCode GetTypeOf()
    {
        var type = Type.GetType(Questions.ToArray()[visibleQuestionIndex].AnswerType);
        return Type.GetTypeCode(type);
    }
}